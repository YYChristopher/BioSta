Wilcoxon秩和与t检验作用于模拟数据（2）（模拟正态分布情形）：
n1 <- 20
n2 <- 20
n <- n1+n2
vec1 <- as.vector(rnorm(n1,0,1))
vec2 <- as.vector(rnorm(n2,1,1))
m11 <- 0
m12 <- 0
m13 <- 0
m14 <- 0
m15 <- 0
m16 <- 0
m17 <- 0
m21 <- 0
m22 <- 0
m23 <- 0
m24 <- 0
m25 <- 0
m26 <- 0
m27 <- 0
for(i in 1:length(vec1)){
  if(vec1[i]>=-3 && vec1[i]< -2)
    m11 <- m11+1
  else if(vec1[i]>=-2 && vec1[i]< -1)
    m12 <- m12+1
  else if(vec1[i]>=-1 && vec1[i]<0)
    m13 <- m13+1
  else if(vec1[i]>=0 && vec1[i]<1)
    m14 <- m14+1
  else if(vec1[i]>=1 && vec1[i]<2)
    m15 <- m15+1
  else if(vec1[i]>=2 && vec1[i]<3)
    m16 <- m16+1
  else
    m17 <- m17+1
  if(vec2[i]>=-3 && vec2[i]< -2)
    m21 <- m21+1
  else if(vec2[i]>=-2 && vec2[i]< -1)
    m22 <- m22+1
  else if(vec2[i]>=-1 && vec2[i]<0)
    m23 <- m23+1
  else if(vec2[i]>=0 && vec2[i]<1)
    m24 <- m24+1
  else if(vec2[i]>=1 && vec2[i]<2)
    m25 <- m25+1
  else if(vec2[i]>=2 && vec2[i]<3)
    m26 <- m26+1
  else
    m27 <- m27+1
}
res1 <- as.vector(c(m11,m12,m13,m14,m15,m16,m17))
res2 <- as.vector(c(m21,m22,m23,m24,m25,m26,m27))
res <- res1+res2
rankst <- rep(0,length(res))#计算秩的开始
rankst[1] <- 1
for(i in 2:length(rankst)){
  if(res[i]!=0)
    rankst[i] <-sum(res[1:i-1])+1
  else
    rankst[i] <- 0
}
rankend <- rep(0,length(res))#计算秩的末尾
for(i in 1:length(rankend)){
  if(res[i]!=0)
    rankend[i] <- sum(res[1:i])
  else
    rankend[i] <- 0
}
Rank <- rep(0,length(rankst))#计算秩向量
for(i in 1:length(Rank)){
  Rank[i] <- (rankst[i]+rankend[i])/2
}
R1 <- 0
for(i in 1:length(res1)){
  R1 <- R1+res1[i]*Rank[i]
}#求秩和
mu <- (n1*(n+1))/2
sigma <- sqrt((n1*n2*(n+1))/12)
wilcox <- (abs(R1-mu)-0.5)/sigma#计算统计量
p_val <- 2*(1-pnorm(wilcox,0,1))
alpha <- 0.05
quannorm <- qnorm(1-alpha/2,0,1)

ave1 <- mean(vec1)
ave2 <- mean(vec2)
s_x1 <- 0
s_x2 <- 0
for(i in 1:length(vec1)){
  s_x1 <- s_x1+(vec1[i]-ave1)^2
  s_x2 <- s_x2+(vec2[i]-ave2)^2
}
s_w <- (s_x1+s_x2)/(n-2)
t_sta <- (ave2-ave1)/(s_w*sqrt(1/n1+1/n2))
quan_t <- qt(1-alpha/2,n-2)